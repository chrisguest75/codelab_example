substitutions:
  _TWO_PART_VERSION: "0.1" 
  _GITHUB_USERNAME: "chrisguest75" 
  #_CONTAINER_SUBFOLDER: "codelabs" 

timeout: "1200.0s"
steps:
# Show some debug info - current state of folder.
- name: 'gcr.io/cloud-builders/git'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    pwd
    ls -la
    echo ${_GITHUB_USERNAME}
    echo ${_TWO_PART_VERSION}

# Decrypt the ssh key.
- name: 'gcr.io/open-source-01/custom_cloudbuild_sshkeys:0.0.5'
  entrypoint: '/workbench/decrypt.sh'
  args: ['/workbench']
  dir: '/workbench'
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Use git clone to get private repo.
- name: 'gcr.io/cloud-builders/git'
  args:
  - clone 
  - --branch 
  - $BRANCH_NAME
  - git@github.com:${_GITHUB_USERNAME}/$REPO_NAME
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Build the base image
# push the base image?
- name: 'gcr.io/cloud-builders/git'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    pwd
    ls -la
    cd $REPO_NAME
    git clone https://github.com/chrisguest75/codelab-tools-fork
    cp Dockerfile ./codelab-tools-fork/Dockerfile
    cd ./codelab-tools-fork

# Build the dockerfile with the latest cloned code.  
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    cd $REPO_NAME/codelab-tools-fork
    pwd
    ls -la
    docker build --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_base:latest -t codelabs_base:latest .
    docker tag codelabs_base:latest gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_base:latest
    docker tag codelabs_base:latest gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_base:$COMMIT_SHA
    docker push gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_base:latest

  # TODO: This has an issue that it might have had another commit since build trigger.  

# Create semver tag 
# TODO: Need to filter height from the commitid as another commit might have sneaked in after trigger fired.
- name: gcr.io/cloud-builders/git
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    cd $REPO_NAME
    pwd
    ls -la
    echo ${_TWO_PART_VERSION}.$(git rev-list --count ${BRANCH_NAME}) > IMAGE_TAG

# This uses the base image
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    cd $REPO_NAME
    pwd
    ls -la
    docker build -t codelabs:latest -f Dockerfile.codelabs .    
    docker tag codelabs:latest gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:latest
    docker tag codelabs:latest gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:$COMMIT_SHA
    docker tag gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:latest gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:$(cat IMAGE_TAG)
    docker push gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:latest
    docker push gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:$COMMIT_SHA
    docker push gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:$(cat IMAGE_TAG)


  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/bash
    args:  
    - '-c'
    - | 
      gcloud beta run deploy codelabs --image gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:$COMMIT_SHA --region europe-west1 --platform managed --quiet


# These are images that pushed as well
images: ['gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_base:latest',
        'gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:latest',
        'gcr.io/$PROJECT_ID/$REPO_NAME/codelabs_$BRANCH_NAME:$COMMIT_SHA']

